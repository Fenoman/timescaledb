-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
-- Validate utility functions and policies for INTEGER columns
-- using chunk creation time metadata. This allows to specify
-- INTERVAL boundary for INTEGER type columns.
DROP TABLE IF EXISTS test;
NOTICE:  table "test" does not exist, skipping
CREATE TABLE test(time INTEGER, device INTEGER, temp FLOAT);
SELECT create_hypertable('test', 'time', chunk_time_interval => 10);
NOTICE:  adding not-null constraint to column "time"
 create_hypertable 
-------------------
 (1,public,test,t)
(1 row)

INSERT INTO test SELECT i, i %10, 0.10 FROM generate_series(1, 100, 1) i;
select count(*) from timescaledb_information.chunks where hypertable_name='test';
 count 
-------
    11
(1 row)

-- Validate show_chunks
SELECT count(*) from show_chunks('test', newer_than => INTERVAL '1 hour');
 count 
-------
    11
(1 row)

SELECT pg_sleep(2);
 pg_sleep 
----------
 
(1 row)

SELECT count(*) from show_chunks('test', older_than => INTERVAL '1 second');
 count 
-------
    11
(1 row)

-- Validate drop_chunks
SELECT count(*) from drop_chunks('test', older_than => INTERVAL '1 second');
 count 
-------
    11
(1 row)

select count(*) from timescaledb_information.chunks where hypertable_name='test';
 count 
-------
     0
(1 row)

INSERT INTO test SELECT i, i %10, 0.10 FROM generate_series(1, 100, 1) i;
select count(*) from timescaledb_information.chunks where hypertable_name='test';
 count 
-------
    11
(1 row)

SELECT count(*) from drop_chunks('test', newer_than => INTERVAL '1 hour');
 count 
-------
    11
(1 row)

select count(*) from timescaledb_information.chunks where hypertable_name='test';
 count 
-------
     0
(1 row)

-- Validate retention policy
INSERT INTO test SELECT i, i %10, 0.10 FROM generate_series(1, 100, 1) i;
select count(*) from timescaledb_information.chunks where hypertable_name='test';
 count 
-------
    11
(1 row)

SELECT add_retention_policy('test', INTERVAL '5 seconds', true) as drop_chunks_job_id \gset
NOTICE:  Interval type specified in retention policy for Integer dimension.
SELECT pg_sleep(5);
 pg_sleep 
----------
 
(1 row)

CALL run_job(:drop_chunks_job_id);
select count(*) from timescaledb_information.chunks where hypertable_name='test';
 count 
-------
     0
(1 row)

SELECT remove_retention_policy('test');
 remove_retention_policy 
-------------------------
 
(1 row)

DROP TABLE test;
